* Table of Contents                                       :TOC_4_gh:noexport:
- [[#summary][Summary]]
- [[#synchronization][Synchronization]]
- [[#views][Views]]
  - [[#lsp-treemacs-errors-list][lsp-treemacs-errors-list]]
    - [[#commands][Commands]]
    - [[#screenshot][Screenshot]]
  - [[#lsp-treemacs-symbols-list][lsp-treemacs-symbols-list]]
    - [[#screenshot-1][Screenshot]]
  - [[#lsp-treemacs-referenceslsp-treemacs-implementations][lsp-treemacs-references/lsp-treemacs-implementations]]
    - [[#screenshot-2][Screenshot]]
  - [[#lsp-treemacs-call-hierarchy][lsp-treemacs-call-hierarchy]]
    - [[#screenshot-3][Screenshot]]
  - [[#lsp-treemacs-deps-list][lsp-treemacs-deps-list]]
    - [[#commands-1][Commands]]
    - [[#screenshot-4][Screenshot]]
  - [[#lsp-metals-treeview][lsp-metals-treeview]]
    - [[#commands-2][Commands]]
    - [[#screenshot-5][Screenshot]]

* Summary
  Integration between [[https://github.com/emacs-lsp/lsp-mode][lsp-mode]] and [[https://github.com/Alexander-Miller/treemacs][treemacs]] and implementation of treeview controls using [[https://github.com/Alexander-Miller/treemacs][treemacs]] as a tree renderer.
* Synchronization
  To enable bidirectional synchronization of lsp workspace folders and [[https://github.com/Alexander-Miller/treemacs][treemacs]] projects.
#+begin_src emacs-lisp
(lsp-treemacs-sync-mode 1)
#+end_src
* Views
** lsp-treemacs-errors-list
   Displays tree like error list structure.
*** Commands
*** Screenshot
    [[file:screenshots/error-list.png]]
    - ~lsp-treemacs-quick-fix~ or press ~x~ when you are in Error List view - offer quickfixes for the error at point.
** lsp-treemacs-symbols-list
   Displays symbols information.
*** Screenshot
    [[file:screenshots/symbols-list.gif]]
** lsp-treemacs-references/lsp-treemacs-implementations
  Display references/implementations using tree view:
*** Screenshot
    [[file:screenshots/references.gif]]

** lsp-treemacs-call-hierarchy
   Display call hierarchy. Use =C-u M-x lsp-treemacs-call-hierarchy= to display outgoing call hierarchy.
*** Screenshot
    [[file:screenshots/call-hierarchy.gif]]
** lsp-treemacs-deps-list
   Browse java dependencies, namespaces, files, etc.
*** Commands
    - ~lsp-treemacs-java-deps-follow~ - select the current editor in the dependency
    - ~lsp-treemacs-java-deps-refresh~ - refresh the view. Bound to ~r~.
*** Screenshot
    [[file:screenshots/dependencies.gif]]
** lsp-metals-treeview
Support for Scala Metals treeview. The treeview is disabled by default in order
to enable the treeview use one of the following configuration approaches.
If you are using use-package:
#+BEGIN_SRC elisp

(use-package lsp-treemacs
  :config
  (lsp-metals-treeview-enable t)
  (setq lsp-metals-treeview-show-when-views-received t))

#+END_SRC

lsp-metals-treeview-show-when-views-received when true will automatically
display the treeview when Metals has initialised the project and sent the
initial top level treeview information. If you wish to keep the tree hidden and
show it explicitly via a command or a bound key leave the variable false
(default) and show the treeview using M-x lsp-metals-treeview.

Alternatively if you're not using use-package:

#+BEGIN_SRC elisp

(require 'lsp-metals-treeview)
(lsp-metals-treeview-enable t)
(setq lsp-metals-treeview-show-when-views-received t)

#+END_SRC

The metals can be displayed at anytime by using M-x lsp-metals-treeview.

To enable logging of metals treeview actions/responses use the variable
lsp-metals-treeview-logging (boolean). All messages will be logged to the lsp
logging buffer.

*** Commands
q - when the treeview has focus it can be hidden using the q key. To show the
tree use M-x lsp-metals-treeview or bind this function to a key.

lsp-shutdown-workspace will automatically close the treeview associated with the
current file buffer.

When switching files the treeview will switch to the treeview associated with
the new workspace.

*** Screenshot
[[file:screenshots/metals-treeview.gif]]
